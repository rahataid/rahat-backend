meta {
  name: get-project-uuid
  type: http
  seq: 3
}

get {
  url: {{url}}/projects/{{uuid}}
  body: none
  auth: none
}

assert {
  res.status: eq 200
  res.body.success: eq true
  res.body.data: isJson 
}

script:pre-request {
  const { projectData } = require('./temp/project-data.json');
  const { access_token } = require('./temp/auth-data.json');
  req.setHeader("Authorization",`Bearer ${access_token}`);

  const url = bru.getEnvVar('url');
  req.setUrl(`${url}/projects/${projectData.uuid}`);
}

tests {
  test('should return the details of project using uuid', async () => {
    const resData = res.getBody();
    expect(res.body.data.uuid).to.equal(resData.data.uuid);
    expect(res.body.data).to.equal(resData.data);
    expect(res.body.data).to.have.property('uuid');
  });
}
