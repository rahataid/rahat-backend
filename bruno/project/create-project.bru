meta {
  name: create-project
  type: http
  seq: 1
}

post {
  url: {{url}}/projects
  body: none
  auth: none
}

assert {
  res.status: eq 201
  res.body.success: eq true
}

script:pre-request {
  const { faker } = require("@faker-js/faker");
  const { access_token } = require('./temp/auth-data.json');
  req.setHeader("Authorization",`Bearer ${access_token}`);
  
  const fName = faker.word.sample();
  const fDescription = faker.lorem.paragraph();
  const fType = "el";
  const fExtras = {
    test : faker.word.sample(),
  };
  const fContractAddress = faker.string.hexadecimal();
  
  req.setBody({
    name: fName,
    description: fDescription,
    type: fType,
    extras: fExtras,
    contractAddress: fContractAddress
  })
}

script:post-response {
  const createFile = require('./createFile');
  
  var resp = res.getBody().data;
  console.log(resp, 'resp');
  const data = {"projectData": resp}
  createFile(data, 'project-data.json');
}

tests {
  test('should create new project', async () => {
    const data = res.getBody();
    expect(res.body.success).to.equal(true);
    expect(res.body.data).to.equal(data.data);
  });
}
