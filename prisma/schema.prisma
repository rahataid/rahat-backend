generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// generator dbml {
//   provider            = "prisma-dbml-generator"
//   output              = "./dbml"
//   outputName          = "rahat-system-model.dbml"
//   projectName         = "Rahat System"
//   projectDatabaseType = "PostgreSQL"
//   projectNote         = "Rahat System"
// }

// generator docs {
//   provider = "node node_modules/prisma-docs-generator"
//   output   = "./docs"
// }

enum Gender {
  MALE
  FEMALE
  OTHER
  UNKNOWN
}

enum BankStatus {
  UNKNOWN
  UNBANKED
  UNDERBANKED
  BANKED
}

enum PhoneOwnership {
  UNKNOWN
  NO_PHONE
  FEATURE
  SMART
}

enum InternetAccess {
  UNKNOWN
  NO_INTERNET
  PHONE_INTERNET
  HOME_INTERNET
}

enum TxStatus {
  NEW
  PENDING
  SUCCESS
  FAIL
  ERROR
}

model AppSettings {
  id        Int      @id @default(autoincrement())
  name      String
  value     Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map(name: "tbl_settings")
}

model OfflineBeneficiary {
  id             Int            @id @default(autoincrement())
  uuid           String         @unique @default(uuid())
  name           String
  phone          String?    @unique @default("")
  walletAddress  Bytes?         @unique
  otp            String         
  otpHash        Bytes?     
  projects Project[] @relation("OfflineBeneficiaryProjects")

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map(name: "tbl_offlineBeneficiaries")
}

model Beneficiary {
  id             Int            @id @default(autoincrement())
  uuid           String         @unique @default(uuid())
  name           String
  phone          String?    @unique @default("")
  dob            DateTime?
  gender         Gender         @default(UNKNOWN)
  walletAddress  Bytes?         @unique
  address        String?
  longitude      Float?
  latitude       Float?
  isApproved     Boolean        @default(false)
  isActive       Boolean        @default(true)
  bankStatus     BankStatus     @default(UNKNOWN)
  phoneOwnership PhoneOwnership @default(UNKNOWN)
  internetAccess InternetAccess @default(UNKNOWN)
  extras         Json?

  projects Project[] @relation("BeneficiaryProjects")

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map(name: "tbl_beneficiaries")
}

model Project {
  id              Int      @id @default(autoincrement())
  name            String
  startDate       DateTime
  endDate         DateTime
  budget          Int      @default(0)
  disbursed       Int      @default(0)
  extras          Json?
  location        String?
  projectType     String?
  projectManager  String?
  coverImage      String?
  description     String?
  contractAddress Bytes?   @unique
  isApproved      Boolean  @default(false)

  owner         User[]        @relation("UserProjects")
  beneficiaries Beneficiary[] @relation("BeneficiaryProjects")
  offlineBeneficiaries OfflineBeneficiary[] @relation("OfflineBeneficiaryProjects")
  vendors       Vendor[]      @relation("ProjectDistributors")
  campaigns     Int[]         @default([])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map(name: "tbl_projects")
}

model Vendor {
  id            Int     @id @default(autoincrement())
  name          String
  walletAddress Bytes?  @unique
  phone         String? @unique @default("")
  email         String?
  address       Json
  isApproved    Boolean @default(false)
  isActive      Boolean @default(false)
  projects Project[] @relation("ProjectDistributors")

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map(name: "tbl_vendors")
}

model Transaction {
  id              Int      @id @default(autoincrement())
  txHash          Bytes    @unique
  txStatus        TxStatus @default(NEW)
  contractName    String?
  contractAddress String?
  timestamp       Int?
  method          String?
  methodParams    Json[]
  blockNumber     Int?
  from            String?
  to              String?
  value           String?
  remarks         String?
  events          Json     @default("{}")

  @@map(name: "tbl_transactions")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String
  email         String?   @unique
  walletAddress Bytes     @unique
  profileImage  String?
  isApproved    Boolean   @default(false)
  isActive      Boolean   @default(true)
  roles         Role[]    @default([USER])
  projects      Project[] @relation("UserProjects")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deletedAt     DateTime?
  lastLoggedIn  DateTime? @default(now())

  @@map(name: "tbl_users")
}

enum Role {
  DONOR
  STAKEHOLDER
  ADMIN
  USER
}